C51 COMPILER V9.01   AT_PRC                                                                06/26/2015 09:26:01 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE AT_PRC
OBJECT MODULE PLACED IN AT_PRC.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE AT_PRC.c OPTIMIZE(6,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"AT_PRC.H"      
   2          #include"STC15FXXXX.H"
   3          #include"DELAY.h"
   4          void at_uart_send_str(unsigned char *str)//·¢ËÍAT×Ö·û´®µ½´®¿Ú
   5          {
   6   1        unsigned char *st_p=str;
   7   1        do{
   8   2           SBUF=*st_p;
   9   2               st_p++;
  10   2               Delay1(1);
  11   2              }while(*st_p);
  12   1              SBUF='\r';
  13   1              Delay1(1);
  14   1              SBUF='\n';
  15   1              Delay1(1);
  16   1      }
  17          void at_uart_send_buf(unsigned char *str,unsigned char len)//·¢ËÍÊý¾Ý»º³åÇøµÄ·Ç×Ö·û´®ÐÅÏ¢£¬Êý¾ÝÁ÷ÐÅÏ¢µ½´®¿
             -Ú
  18          {
  19   1        unsigned char *st_p=str;
  20   1        
  21   1        while(len){
  22   2           SBUF=*st_p;
  23   2               st_p++;
  24   2               Delay1(1);
  25   2               len--;
  26   2              }while(*st_p);
  27   1              Delay1(1);
  28   1      }
  29          
  30          void init_uart(void)
  31          {
  32   1              B_TX1_Busy = 0;
  33   1              RX1_Cnt = 0;
  34   1              TX1_Cnt = 0;
  35   1              S1_8bit();                              //8Î»Êý¾Ý
  36   1              S1_USE_P30P31();                //UART1 Ê¹ÓÃP30 P31¿Ú   Ä¬ÈÏ
  37   1              AUXR &= ~(1<<4);        //Timer stop            ²¨ÌØÂÊÊ¹ÓÃTimer2²úÉú
  38   1              AUXR |= 0x01;           //S1 BRT Use Timer2;
  39   1              AUXR |=  (1<<2);        //Timer2 set as 1T mode
  40   1              TH2 = (unsigned char)(Timer2_Reload >> 8);
  41   1              TL2 = (unsigned char)Timer2_Reload;
  42   1              AUXR |=  (1<<4);        //Timer run enable
  43   1              REN = 1;        //ÔÊÐí½ÓÊÕ
  44   1              ES  = 1;        //ÔÊÐíÖÐ¶Ï
  45   1              EA = 1;         //ÔÊÐíÈ«¾ÖÖÐ¶Ï
  46   1              P3M1 = 0x00;
  47   1          P3M0 = 0xFF;
  48   1              RX1_Cnt=0;
  49   1      }
  50          
  51          
  52          
  53          void make_AT_SEND_LEN(unsigned char a_len,unsigned char DATA_S)   //Éú³ÉÓÒ±ßÕâÑùµÄÖ¸Áî£¬½«²ÎÊýa_len ¸Ä³É10
             -½øÖÆ£¬ÓÒ±ßÕâÌõÖ¸Áî  "AT+CIPSEND=XX" XXÊÇ·¢ËÍµÄÊýÁ¿
C51 COMPILER V9.01   AT_PRC                                                                06/26/2015 09:26:01 PAGE 2   

  54          {
  55   1        unsigned char aa=0;
  56   1        for(aa=0;aa<20;aa++)
  57   1        at_send_len_ox[aa]=0;
  58   1      
  59   1        for(aa=0;aa<11;aa++)
  60   1        {
  61   2          if(DATA_S==LOC_data)
  62   2          at_send_len_ox[aa]=CIPSEND_LEN[aa];  //¼ôÌù"AT+CIPSEND= µ½RAM  ºóÃæµÄÊ®½øÖÆ²ÎÊýÓÉÏÂÃæµÄ²¿·ÖÉú³É
  63   2              else if(DATA_S==RMT_data)
  64   2              at_send_len_ox[aa]=AT_CLDSEND[aa];       //¼ôÌù"AT+CIPSEND= µ½RAM  ºóÃæµÄÊ®½øÖÆ²ÎÊýÓÉÏÂÃæµÄ²¿·ÖÉú³É
  65   2        }
  66   1        t_o=0;                                 //È¥µôÇ°ÃæµÄ0£¬±ÈÈç·¢ËÍ38¸ö×Ö½Ú£¬038£¬Ç°ÃæµÄ0¾Í¿ÉÒÔÈ¥µôÁË¡£
  67   1        if((a_len/100))
  68   1        {
  69   2        at_send_len_ox[aa]=a_len/100+'0';
  70   2        aa++;
  71   2        t_o=1;
  72   2        }
  73   1        if((a_len%100)/10)
  74   1        {
  75   2        at_send_len_ox[aa]=(a_len%100)/10+'0';
  76   2        aa++;
  77   2        t_o=1;
  78   2        }
  79   1        else if(t_o)
  80   1        {
  81   2          at_send_len_ox[aa]=0+'0';
  82   2              aa++;
  83   2        }
  84   1        at_send_len_ox[aa]=(a_len%10)+'0';
  85   1        aa++;
  86   1        at_send_len_ox[aa]=0;
  87   1      }
  88          
  89          //ÏÂÃæÕâ¸öº¯Êý¹¹ÔìÒ»¸ö·¢ËÍµÄÊý¾Ý¸ñÊ½£¬Çë¿´Êý¾Ý¸ñÊ½ÎÄµµ£¬ÍêÈ«¿ÉÒÔÓÃ½á¹¹ÌåÍê³É£¬ÕâÀï²ÉÓÃÊý¾Ý£¬´ÓÉÏµ½ÏÂÃèÊöÕâ
             -¸öÊý¾Ý°ü
  90          //·¢ËÍµÄÊý¾Ý°ü£¬Ä¿Ç°Ö»ÓÐµÇÂ¼Êý¾Ý°ü£¬ºÍÉÏ±¨ÎÂ¶ÈÊý¾Ý°ü£¬ÕâÁ½¸ö»ù±¾µÄÊý¾Ý°ü£¬ÉÏ±¨Êý¾Ý°ü¿ÉÒÔ³äµ±ÐÄÌø°ü£¬µÚÒ»¸ö
             -²ÎÊý¾ö¶¨×Å£¬ÊÇ·¢ËÍµÇÂ¼°ü»¹ÊÇÎÂ¶È°ü
  91          //ÆäËû¼¸¸öÈë¿Ú²ÎÊýÊÇÆ÷¼þID£¬ÁîÅÆ°ü£¬ÒÔ¼°¿Í»§µÄÊý¾Ý£¬ÒÔ¼°¿Í»§Êý¾Ý³¤¶È
  92          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    332    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
